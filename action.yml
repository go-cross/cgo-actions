name: 'CGO actions'
description: 'build golang project with CGO enabled'
author: 'xhofe'

# Add your action's branding here. This will appear on the GitHub Marketplace.
branding:
  icon: 'heart'
  color: 'red'

# Define your inputs here.
inputs:
  dir:
    description: 'The directory to work'
    required: false
    default: '.'
  packages:
    description: 'The packages to build'
    required: false
    default: '.'
  flags:
    description: 'The flags to pass to the go build command'
    required: false
    default: '-ldflags=-w -s'
  static-link-for-musl:
    description: 'Whether to statically link for the musl libc'
    required: false
    default: 'true'
  targets:
    description: 'The targets to build for'
    required: false
    # android-386, android-amd64, android-arm, android-arm64
    # darwin-amd64, darwin-arm64
    # linux-386, linux-amd64, linux-arm-5, linux-arm-6, linux-arm-7, linux-arm64
    # linux-mips, linux-mips64, linux-mips64le, linux-mipsle
    # linux-ppc64le, linux-riscv64 ,linux-s390x
    # linux-amd64-musl, linux-arm64-musl, linux-mips-musl, linux-mips64-musl, linux-mips64le-musl, linux-mipsel-musl, linux-ppc64le-musl, linux-s390x-musl
    # linux-arm-musleabi, linux-armel-musleabi, linux-armv5l-musleabi, linux-armv6-musleabi, linux-armv7m-musleabi
    # linux-arm-musleabihf, linux-armel-musleabihf, linux-armv5l-musleabihf, linux-armv6-musleabihf, linux-armv7l-musleabihf, linux-armv7r-musleabihf
    # windows-386, windows-amd64, windows-arm64
    default: '*'
  musl-target-format:
    description: 'The format for musl target'
    required: false
    default: '$os-$arch-$musl'
  out-dir:
    description: 'The output directory'
    required: false
    default: 'bin'
  output:
    description: 'The output binary name'
    required: false
    default: '$repo-$target$ext'

# Define your outputs here.
outputs:
  files:
    description: 'The files that were built'

runs:
  using: node20
  main: dist/index.js
